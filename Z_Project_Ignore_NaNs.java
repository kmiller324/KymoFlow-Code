import ij.*;import ij.process.*;import ij.plugin.*;public class Z_Project_Ignore_NaNs implements PlugIn {private Object[] stack;public void run(String arg) {ImagePlus imp = IJ.getImage();ImagePlus projection = zProject(imp);projection.show();}public ImagePlus zProject(ImagePlus imp) {ImageStack stack = imp.getStack();int w = stack.getWidth();int h = stack.getHeight();int d = stack.getSize();ImagePlus projection = IJ.createImage("Projection", "32-bit Black", w, h, 1);ImageProcessor ip = projection.getProcessor();double value;for (int x=0; x<w; x++) {for (int y=0; y<h; y++) {double sum = 0.0;int count = 0;for (int z=0; z<d; z++) {value = stack.getVoxel(x, y, z);if (!Double.isNaN(value)) {sum += value;count++;}}ip.setf(x, y, (float)(sum/count));}}ip.resetMinAndMax();return projection;}}